/**
 * ⚠️ AUTO-GENERATED FILE — DO NOT EDIT!
 *
 * This file was generated by the `nest` script from 'flat.json'.
 * To update it, run: `npm run locale:nest <locale>`
 */
 
 
import type { LocaleSchema } from '../../types/interfaces';

           
const Locale: LocaleSchema  = {
    adapters: {
        pickerMode: {
            notice: {
                error: "This type of content is unsupported. Please check the plugin settings."
            }
        }
    },
    commands: {
        pickerMode: {
            notice: {
                disabled: "Picker mode is disabled"
            }
        },
        togglePanels: {
            notice: {
                hidden: "Control panels hidden",
                noActiveImages: "No active images found",
                noMd: "This command can only be used when a Markdown view is open.",
                shown: "Control panels shown"
            }
        }
    },
    image: {
        controlPanel: {
            fold: {
                fold: {
                    expanded: "Fold",
                    folded: "Expand"
                },
                name: "Fold"
            },
            move: {
                down: "Move down",
                downLeft: "Move down left",
                downRight: "Move down right",
                left: "Move left",
                name: "Move",
                right: "Move right",
                up: "Move up",
                upLeft: "Move up left",
                upRight: "Move up right"
            },
            service: {
                fullscreen: {
                    name: "Fullscreen",
                    off: "Open in fullscreen mode",
                    on: "Exit fullscreen mode"
                },
                hide: {
                    hidden: "Show panels",
                    name: "Panel Visibility",
                    shown: "Hide panels"
                },
                name: "Service",
                touch: {
                    off: "Enable touch",
                    on: "Disable touch"
                }
            },
            zoom: {
                in: "Zoom in",
                name: "Zoom",
                out: "Zoom out",
                reset: "Reset zoom and position"
            }
        }
    },
    pickerMode: {
        tooltip: {
            imageState: {
                nonInitialized: "Cannot initialize this image. Consult for docs for more info",
                off: "Activate interactive mode",
                on: "Deactivate interactive mode"
            },
            onExit: "Picker mode disabled",
            onStart: "Picker mode enabled\nClick on image to toggle interactive mode\nAlt + click on image to open in in Popup viewer & editor\nPress Esc to exit"
        }
    },
    settings: {
        pages: {
            about: {
                githubPage: {
                    linkButtonTooltip: "Go to GitHub page of this plugin",
                    name: "GitHub page"
                }
            },
            debug: {
                aboutExportedLogs: {
                    desc: [
                        "Exported logs contain:",
                        "• Complete system information (OS, hardware, plugins)",
                        "• Debug events with timestamps",
                        "• Performance metrics",
                        "Review logs before sharing - remove sensitive data if needed."
                    ],
                    name: "About exported logs"
                },
                clearLogsStorage: {
                    clearButtonTooltip: "Clear logs storage",
                    desc: "Storage: {{storage}}, Entries: {{entries}}",
                    name: "Clear logs storage",
                    notice: {
                        successfully: "Logs storage was cleared"
                    }
                },
                copyLogs: {
                    copyButtonTooltip: "Copy logs to clipboard",
                    name: "Copy logs",
                    notice: {
                        logsNotFound: "No logs data found",
                        successfully: "Logs was copied to clipboard"
                    }
                },
                enableLogging: {
                    desc: "Enable debug logging for troubleshooting",
                    name: "Enable logging"
                },
                exportLogs: {
                    exportButtonTooltip: "Export logs",
                    name: "Export logs"
                },
                logLevel: {
                    desc: "Set minimum log level to display",
                    name: "Log level"
                },
                reportIssue: {
                    desc: [
                        "If you encounter any issues or have suggestions, please report them on GitHub.",
                        "How to report an issue:",
                        "1. Enable debug logging below and set level to `Debug`.",
                        "Warning: This may impact performance temporarily.",
                        "2. Reproduce the issue with logging enabled.",
                        "3. Export logs using the button below.",
                        "4. Click `Report an issue` and fill out the form.",
                        "5. Attach the exported log file.",
                        "6. Submit the issue."
                    ],
                    linkButtonTooltip: "Report an issue",
                    name: "Report an issue"
                }
            },
            images: {
                controls: {
                    serviceIgnoring: {
                        desc: "Service panel will always be visible regardless of visibility mode",
                        name: "Ignore panel visibility rule for service panel"
                    },
                    visibility: {
                        desc: "Set when panels will be visible",
                        dropdown: {
                            always: "Always",
                            focus: "On focus",
                            hover: "On hover"
                        },
                        name: "Controls visibility",
                        tooltips: {
                            always: "Controls are always visible when this option is selected.",
                            focus: "Controls become visible when the image is focused (e.g., clicked). The service panel may remain hidden if the ignore option is enabled.",
                            hover: "Controls become visible when hovering the mouse over the image. The service panel may remain hidden if the ignore option is enabled."
                        }
                    }
                },
                general: {
                    fold: {
                        autoFoldOnFocusChange: {
                            name: "Automatically fold images on focus change"
                        },
                        foldByDefault: {
                            name: "Fold images by default"
                        },
                        header: "Fold"
                    },
                    interactive: {
                        activationMode: {
                            desc: "Live Preview mode uses lazy loading by default",
                            dropdown: {
                                immediate: "Immediate",
                                lazy: "Lazy"
                            },
                            name: "Activation mode for Obsidian Markdown View",
                            tooltips: {
                                immediate: "Images become interactive instantly when detected. Best for small notes.",
                                lazy: "Images become interactive only when scrolled into view. Best for notes with many images."
                            }
                        },
                        autoDetect: {
                            desc: [
                                "* This option is available only for Obsidian Markdown View",
                                "When enabled, the plugin will automatically scan and prepare all suitable images for potential interactivity."
                            ],
                            name: "Auto-detect images"
                        },
                        header: "Interactivity options",
                        pickerMode: {
                            desc: [
                                "Adds a ribbon button and command palette entry for toggling picker mode.",
                                "When activated, hover over images/SVG elements to see availability status, then click to initialize or toggle interactivity."
                            ],
                            name: "Enable picker mode"
                        }
                    },
                    size: {
                        desc: "Note: You need to reopen all the open Markdown views with images in them to apply these settings.",
                        expanded: {
                            desc: [
                                "Set the container dimensions for expanded state."
                            ],
                            name: "Expanded image container size"
                        },
                        folded: {
                            desc: [
                                "Set the container dimensions for folded state."
                            ],
                            name: "Folded image container size"
                        },
                        header: "Image size",
                        labels: {
                            height: "Height:",
                            width: "Width:"
                        },
                        placeholders: {
                            height: "height",
                            width: "width"
                        },
                        saveButtonTooltip: "Save changes",
                        validation: {
                            fixErrors: "Please fix validation errors",
                            invalidHeight: "Invalid height. Please enter number in range {{range}}.",
                            invalidWidth: "Invalid width. Please enter number in range {{range}}.",
                            nothingToSave: "Nothing to save",
                            savedSuccessfully: "Saved successfully"
                        }
                    }
                },
                layout: {
                    buttonsLayout: {
                        desc: "Configure which buttons are shown on each panel",
                        modal: {
                            preset: {
                                buttons: {
                                    full: "Full",
                                    minimal: "Minimal",
                                    presentation: "Presentation mode"
                                },
                                name: "Quick presets"
                            },
                            title: "Buttons layout"
                        },
                        name: "Buttons layout",
                        tooltip: "Open control buttons layout editor"
                    },
                    controlsLayout: {
                        desc: "Adjust controls positions and visibility",
                        modal: {
                            availablePanels: {
                                desc: [
                                    "• Move Panel: By default located at bottom right - Contains 8 directional buttons for images movement",
                                    "• Zoom Panel: By default located at center right - Features zoom in/out and reset controls",
                                    "• Service Panel: By default located at upper right - Contains additional functionality buttons"
                                ],
                                name: "Available panels"
                            },
                            howTo: {
                                desc: [
                                    "1. Use checkboxes below to toggle panel visibility on/off",
                                    "2. Click and drag any panel to reposition it on the image",
                                    "3. Panel positions are saved automatically",
                                    "4. Reload the view to see your changes take effect"
                                ],
                                name: "How to customize panels"
                            },
                            panelConfig: {
                                desc: "Customize control panels appearance and position",
                                name: "Panel configuration"
                            },
                            title: "Controls layout"
                        },
                        name: "Controls layout",
                        tooltip: "Open controls layout editor"
                    }
                },
                presets: {
                    addNewImagePreset: {
                        desc: [
                            "Add new image preset to override default settings for specific images.",
                            "Name: alphanumeric + hyphens only",
                            "Selector: CSS selector for target images"
                        ],
                        header: "Add new image preset",
                        notice: {
                            newConfigAdded: "New image preset was added"
                        },
                        placeholders: {
                            name: "Example preset name",
                            selector: ".example-preset-selector"
                        },
                        tooltips: {
                            infoButton: "Click for more information on how the plugin works",
                            saveButton: "Add this preset"
                        },
                        undoStack: {
                            addAction: "Add image preset\nName: {{name}}\nSelector: {{selector}}"
                        },
                        userGuideModal: {
                            customSelectors: {
                                desc: "Selectors are only needed for specific behavior overrides. For example, to disable UI panels for SVG inside Mermaid diagrams.",
                                name: "Custom selectors (optional)"
                            },
                            findingSelectors: {
                                desc: [
                                    "1. Open DevTools (Ctrl+Shift+I)",
                                    "2. Use element selector (Ctrl+Shift+C)",
                                    "3. Click on the specific element you want to customize",
                                    "4. Find the class attribute: `.mermaid`, `.block-language-plantuml`, etc.",
                                    "5. Use this selector to create specific settings overrides"
                                ],
                                name: "Finding selectors (when needed):"
                            },
                            header: "User Guide",
                            howItWorks: {
                                desc: [
                                    "The plugin automatically processes all images and SVG elements in your markdown files.",
                                    "In auto-detect mode, it finds all suitable images and makes them interactive",
                                    "In picker mode, hover over any image and click to make it interactive with zoom, drag, and control panels."
                                ],
                                name: "How this plugin works"
                            },
                            video: {
                                failed: "Video failed to load. Please try again later.",
                                loading: "Loading video..."
                            },
                            workingModes: {
                                desc: [
                                    "• Auto-detect: Plugin automatically finds and processes all images",
                                    "• Picker toggle: Hover over images and click to activate interaction",
                                    "• Use ribbon button or command palette to toggle picker mode"
                                ],
                                name: "Working modes"
                            }
                        }
                    },
                    availableImageConfigs: {
                        header: "Available image presets",
                        item: {
                            actions: {
                                changes: {
                                    name: "name: \"{{old}}\" → \"{{new}}\"",
                                    selector: "selector: \"{{old}}\" → \"{{new}}\""
                                },
                                delete: "Delete unit\n`Name: {{name}}\nSelector: {{selector}}`",
                                disable: "Disable {{name}} unit",
                                edit: "Edit unit \"{{name}}\":\n{{changes}}",
                                enable: "Enable {{name}} unit"
                            },
                            buttons: {
                                cancel: "Cancel operation? All changes will be lost.",
                                delete: "Delete {{name}} unit",
                                edit: "Edit {{name}} unit",
                                options: "Options for {{name}} unit",
                                save: "Save changes for {{name}}?"
                            },
                            toggle: {
                                disable: "Disable {{name}} unit",
                                enable: "Enable {{name}} unit"
                            }
                        },
                        optionsModal: {
                            desc: "These settings will only apply to this unit.",
                            name: "{{name}} unit options",
                            panels: {
                                action: "Turn {{state}} panel `{{panel}}` for unit `{{name}}`",
                                header: "Panels",
                                states: {
                                    off: "off",
                                    on: "on"
                                }
                            }
                        },
                        pagination: {
                            buttons: {
                                editingBlocked: "Can`t change page while editing",
                                next: {
                                    disabled: "No next page",
                                    enabled: "Go to next page"
                                },
                                previous: {
                                    disabled: "No previous page",
                                    enabled: "Go to previous page"
                                }
                            },
                            page: "Page {{current}} of {{total}} (Total image presets: {{count}})"
                        },
                        perPageSlider: {
                            name: "Image presets per page"
                        }
                    },
                    history: {
                        notices: {
                            nothingToRedo: "Nothing to redo",
                            nothingToUndo: "Nothing to undo"
                        },
                        tooltips: {
                            redo: {
                                available: "Redo\n{{description}}{{count}}\nShortcut: CTRL+SHIFT+Z",
                                nothing: "Nothing to redo\nShortcut: CTRL+SHIFT+Z"
                            },
                            undo: {
                                available: "Undo\n{{description}}{{count}}\nShortcut: CTRL+Z",
                                nothing: "Nothing to undo\nShortcut: CTRL+Z"
                            }
                        }
                    },
                    unitsValidation: {
                        bothInvalid: "Config name and selector are both invalid",
                        fillOutField: "Fill out preset {{field}} field!",
                        invalidSelectorPrefix: "Invalid CSS selector: {{err}}",
                        nameAlreadyExists: "Config with that name already exists",
                        nothingToSave: "Nothing to save",
                        oneInvalid: "Config {{field}} is invalid",
                        selectorAlreadyExists: "Config with that selector already exists"
                    }
                }
            }
        },
        toolbar: {
            reset: {
                notice: "Settings have been reset to default.",
                tooltip: "Reset settings to default"
            },
            sidebar: {
                tooltip: "Toggle sidebar"
            }
        }
    }
};

export default Locale;